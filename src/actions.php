<?php
class Actions
{
    use Getter;

    private static $_cache = [];

    private $_method;
    private $_args;

    private $_pathVars;
    private $_base;
    private $_path;
    private $_name;
    private $_content;

    protected $_httpHeaders = Sys::NO_CACHE_HEADERS;
    protected $_title;

    public static function __callStatic($method, $args)
    {
        if (count($args) == 0) {
            $class = static::class;
            if (!isset(self::$_cache[$class][$method])) {
                self::$_cache[$class][$method] = new static($method);
                return self::$_cache[$class][$method];
            }
        }
        $actions = new static($method, $args);
        if (!$actions instanceof Actions) {
            throw new Exception('Actions must inhrerit class "' . self::class . '".');
        }
        return $actions;
    }

    public function __construct($method, $args = [])
    {
        $name = 'action' . ucfirst($method);
        if (!method_exists($this, $name)) {
            throw new RuntimeException('Cannot find action method "' . get_class($this) . '::' . $name . '".');
        }
        $this->_method = $name;
        $this->_args = $args;
    }

    public function cook($pathVars, $base, $path, $name)
    {
        $this->_pathVars = $pathVars;
        $this->_base = $base;
        $this->_path = $path;
        $this->_name = $name;
        try {
            $content = Common::getOutput([$this, $this->_method], $this->_args);
        } catch (Exception $e) {
            $this->_title = 'Error';
            $content = View::renderHtml('error', ['message' => $e->getMessage()]);
        }
        if (Server::isAjaxRequest()) {
            echo $content;
            exit;
        }
        $this->_content = $content;
    }

    public function actionDefault(...$args)
    {
        $this->_title = 'default';
        echo <<<EOS
        <h1>Actions::default</h1>
        <p class="sys">
        Generated by default action of <a href="https://github.com/lasyard/lasys" target="_blank">Lasys</a>.
        </p>
        EOS;
        echo '<p>pathVars = ';
        print_r($this->pathVars);
        echo '</p>';
        echo '<p>args = ';
        print_r($args);
        echo '</p>';
    }

    public function actionError($msg)
    {
        $this->_title = 'Error';
        // This action does not cook, so set content directly.
        $this->_content = View::renderHtml('error', [
            'message' => $msg
        ]);
    }
}
